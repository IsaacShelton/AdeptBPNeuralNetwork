
pragma compiler_version '2.0'
pragma project_name 'AdeptNeuralNetwork'
pragma optimization aggressive

import 'sys/ctime.adept'
import 'sys/cstdio.adept'
import 'sys/cstdlib.adept'

import 'gym.adept'
import 'neuralnet.adept'

func main(in argc int, in argv **ubyte) int {
	network NeuralNetwork; blueprint NeuralBlueprint
	srand(time(null))

	printf('Creating Neural Blueprint...\n')
	blueprint.create(); defer blueprint.free()
	blueprint.addLayer(2)
	blueprint.addLayer(4)
	blueprint.addLayer(4)
	blueprint.addLayer(1)

	printf('Creating Neural Network...\n')
	network.create(&blueprint); defer network.free()

	// You can experiment with different exercises here
	// (Remember to change the neural blueprint if necessary)
	workout(&network, GYM_EXERCISE_XOR)
	return 0
}
